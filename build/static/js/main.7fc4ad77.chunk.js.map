{"version":3,"sources":["components/AddContact.js","components/Contacts.js","components/Filter.js","components/Notification.js","services/contacts.js","App.js","index.js"],"names":["AddContact","_ref","onSubmit","contacts","eventHandler","react_default","a","createElement","name","value","onChange","number","type","Contact","onClick","Contacts","_ref2","filter","searchResults","contact","toLowerCase","includes","rows","map","Contacts_Contact","key","id","length","Filter","Notification","message","className","status","baseUrl","services_contacts","axios","get","then","response","data","newObject","post","delete","concat","put","App","props","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","notification","setNotification","errorMessage","setMessage","objectSpread","useEffect","contactService","components_Notification","components_Filter","event","target","components_AddContact","preventDefault","nameObject","person","window","confirm","find","changedContact","returnedContact","setTimeout","catch","err","defineProperty","components_Contacts","deleteThis","removeContact","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7fc4ad77.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst AddContact = ({ onSubmit, contacts, eventHandler }) => {\r\n    return (\r\n      <div>\r\n        <h2>Add Contact</h2>\r\n        <form onSubmit={onSubmit}>\r\n          <div>\r\n            Name: <input name=\"name\" value={contacts.name} onChange={eventHandler} />\r\n          </div>\r\n          <div>\r\n            Number: <input name=\"number\" value={contacts.number} onChange={eventHandler} />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">Add Contact</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default AddContact","import React from 'react';\r\n\r\nconst Contact = ({ name, number, eventHandler }) => {\r\n  return (\r\n    <li>{name}: {number}\r\n    <button onClick={eventHandler}>Delete</button></li>\r\n  )\r\n}\r\nconst Contacts = ({ contacts, filter, eventHandler }) => {\r\n  const searchResults = contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n  const rows = () => searchResults.map(contact => {\r\n    return (\r\n      <Contact key={contact.id} \r\n               name={contact.name} \r\n               number={contact.number} \r\n               eventHandler={() => eventHandler(contact)} />\r\n    )\r\n  })\r\n\r\n  if (rows().length === 0) {\r\n    return (\r\n      <div>\r\n        <p>No Results</p>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      {rows()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contacts","import React from 'react';\r\n\r\nconst Filter = ({ name, value, eventHandler }) => {\r\n    return (\r\n      <div>\r\n        Search: <input name={name} value={value} onChange={eventHandler} />\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className={message.status}>\r\n            {message.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react';\nimport AddContact from './components/AddContact';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport contactService from './services/contacts';\n\n\nconst App = (props) => {\n\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState({\n    name: '',\n    number: '',\n  })\n  const [ showAll, setShowAll ] = useState('')\n  const [ notification, setNotification ] = useState({\n    message: null,\n    status: null\n  })\n\n  const errorMessage = {\n    message: `Contact has already been deleted form the server`,\n    status: \"error\"\n  }\n\n  const setMessage = (message, status) => {\n    setNotification({\n      ...notification,\n      message: message,\n      status: status\n    })\n  }\n\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(contacts => setPersons(contacts))\n  }, [])\n\n\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName.name,\n      number: newName.number\n    }\n    \n    // Here we are generating an array with boolean values. If newName equals an existing name. The value\n    // will become true. After the array is returned we check if it contains any true values.\n    if (persons.map(person => person.name.toLowerCase() === newName.name.toLowerCase()).includes(true)) {\n      if (window.confirm(`${nameObject.name} already in list. Would you like to update number to ${nameObject.number}`)) {\n\n        const name = persons.find(person => person.name === nameObject.name)\n        const changedContact = {...name, number: nameObject.number}\n\n        contactService\n          .update(name.id, changedContact)\n          .then(returnedContact => {\n            setPersons(persons.map(person => person.id !== name.id ? person : returnedContact))\n          })\n          .then(() => {\n            setMessage(`${nameObject.name} updated`, 'success')\n            setTimeout(() => {\n              setMessage(null, null)\n            }, 5000)\n          })\n          .catch(err => {\n            setMessage(errorMessage.message, errorMessage.status)\n            setPersons(persons.filter(person => person.id !== changedContact.id))\n            setTimeout(() => {\n              setMessage(null, null)\n            }, 5000)\n          })\n      }\n    } else {\n      contactService\n        .create(nameObject)\n        .then(returnedContact => {\n          setPersons(persons.concat(returnedContact))\n        })\n        .then(() => {\n          setMessage(`${nameObject.name} added`, 'success')\n          setTimeout(() => {\n            setMessage(null, null)\n          }, 5000)\n        })\n      }\n    setNewName({...newName, name: '', number: ''})\n  }\n\n  const handleNameChange = (event) => {\n    setNewName({...newName, [event.target.name]: event.target.value})\n  }\n  const handleFilterChange = (event) => {\n    setShowAll(event.target.value)\n  }\n  const handleRemoveChange = (contact) => {\n    if (window.confirm(`Are you sure you want to delete ${contact.name}?`)) {\n      const deleteThis = persons.find(person => person.id === contact.id)\n      contactService\n        .remove(deleteThis.id)\n        .then(removeContact => {\n          setPersons(persons.filter(person => person.id !== deleteThis.id))\n        })\n        .then(() => {\n          setMessage(`${contact.name} deleted`, 'success')\n          setTimeout(() => {\n            setMessage(null, null)\n          }, 5000)\n        })\n        .catch(err => {\n          setMessage(errorMessage.message, errorMessage.status)\n          setPersons(persons.filter(person => person.id !== deleteThis.id))\n          setTimeout(() => {\n            setMessage(null, null)\n          }, 5000)\n        })\n    }\n  }\n\n\n  return (\n    <div>\n      <h2 className=\"spacing-bottom\">Phonebook</h2>\n      <Notification message={notification} />\n      <Filter name='filter' value={showAll} eventHandler={handleFilterChange} /> \n      <AddContact onSubmit={addName} contacts={newName} eventHandler={handleNameChange} />\n      <h2>Contacts</h2>\n      <Contacts contacts={persons} filter={showAll} eventHandler={handleRemoveChange}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}